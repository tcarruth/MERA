library(devtools)
install_github('tcarruth/MSEtool',force=TRUE)
packageVersion(MSEtool)
packageVersion('MSEtool')
library(MSEtool)
library(DLMtool)
# === Source code and objects =========================================================================
source('Step 2 - Build fitting modifications.R')
avail('FM')
IN <- readRDS("IN_Initial.rda")
install.github('tcarruth/MSEtool')
library(devtools)
install.github('tcarruth/MSEtool')
install_github('tcarruth/MSEtool')
install.packages('DLMtool')
install.packages('MSEtool')
Data<-new('Data',"C:/Users/tcar_/Dropbox/MSC Data Limited Methods Project - Japan/MERA_Japan_workshop/TokyoBaySeaBass_TC/MERA_TokyoBayData.csv")
library(MSEtool)
Data<-new('Data',"C:/Users/tcar_/Dropbox/MSC Data Limited Methods Project - Japan/MERA_Japan_workshop/TokyoBaySeaBass_TC/MERA_TokyoBayData.csv")
Data
dattest<-Data
dattest@vbLinf
shiny::runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
dattest<-new('Data',"C:/Users/tcar_/Dropbox/MERA/MERA_TESTS/TokyoBaySeaBass_TC/MERA_TokyoBayData_test_dat_err.csv")
dattest<-new('Data',"C:/Users/tcar_/Dropbox/MERA/MERA_TESTS/TokyoBaySeaBass_TC/MERA_TokyoBayData_test_dat_err.csv")
errlist<-new('list')
Year<-dattest@Year
Cat<-dattest@Cat[1,]
Ind<-dattest@Ind[1,]
SpInd<-dattest@SpInd[1,]
CAL<-dattest@CAL[1,,]
CALbins<-dattest@CAL_bins
CAA<-dattest@CAA[1,,]
ML<-dattest@Ind[1,]
if(length(min(Year):max(Year))!=length(Year)) errlist$MissYr="The data file is missing years of data (the Year index and data must have an entry for each year
- use NAs for catch and other data if these are missing for certain years"
if(any(is.na(Cat))) errlist$CatNA="You have specified missing (NA) values in your catch time series - this must have a value for each year of your dataset"
if(!all(is.na(Cat))) if(length(Cat)!=length(Year)) errlist$CatLen="Catches (Cat) are not of the same length as the Year (Year) index"
if(!all(is.na(Ind))) if(length(Ind)!=length(Year)) errlist$IndLen="Index (Ind) data are not of the same length as the Year (Year) index"
if(!all(is.na(SpInd))) if(length(SpInd)!=length(Year)) errlist$SpIndLen="Spawning Index (SpInd) data are not of the same length as the Year (Year) index"
if(!all(is.na(ML))) if(length(ML)!=length(Year)) errlist$ML="Mean Length (ML) data are not of the same length as the Year (Year) index"
if(!all(is.na(CAL))) if(dim(CAL)[1]!=length(Year)) errlist$CALLen="Catch at length (CAL) data are not of the same length as the Year (Year) index"
if(!all(is.na(CAA))) if(dim(CAA)[2]!=length(Year)) errlist$CAALen="Catch at age (CAA) data are not of the same length as the Year (Year) index"
if(!all(is.na(CAL))) if(dim(CAL)[2]!=(length(CALbins)-1)) errlist$CALbins ="Catch at length (CAL) data do not match length of the CAL bin definitions
(CALbins should be longer by 1 as these define the upper and lower breakpoints of the CAL data)"
!all(is.na(CAL))
is.na(dattest@vbLinf)
dattest@vbLinf
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
MSClog<-readRDS("C:/Users/tcar_/Dropbox/MERA/MERA_TESTS/TokyoBaySeaBass_TC/Japanese_seabas.mera")
names(MSClog)
MSClog$eff_values
shiny::runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
dat<-readRDS("C:/temp/dat.rda")
dat
dat@Year
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
shiny::runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
1-exp(-3)
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
xcvzcvc
